package com.gbyczyns.xjc.plugins;

import java.lang.reflect.Field;

import org.xml.sax.ErrorHandler;
import org.xml.sax.SAXException;

import com.sun.codemodel.JDefinedClass;
import com.sun.codemodel.JDocCommentable;
import com.sun.codemodel.JMethod;
import com.sun.tools.xjc.Options;
import com.sun.tools.xjc.Plugin;
import com.sun.tools.xjc.outline.ClassOutline;
import com.sun.tools.xjc.outline.Outline;

public class JavadocRemoverPlugin extends Plugin {

	public static final String OPTION_NAME = "Xremove-javadoc";

	@Override
	public boolean run(Outline outline, Options opts, ErrorHandler errHandler) throws SAXException {

		for (ClassOutline classOutline : outline.getClasses()) {
			JDefinedClass jDefinedClass = classOutline.implClass;
			removeJavaDocs(jDefinedClass);

			for (JMethod method : jDefinedClass.methods()) {
				removeJavaDocs(method);
			}
		}

		return true;
	}

	private void removeJavaDocs(JDocCommentable commentable) {
		try {
			Field field = commentable.getClass().getDeclaredField("jdoc");
			field.setAccessible(true);
			field.set(commentable, null);
		} catch (NoSuchFieldException | SecurityException | IllegalArgumentException | IllegalAccessException e) {
			throw new RuntimeException(e);
		}
	}

	@Override
	public String getOptionName() {
		return OPTION_NAME;
	}

	@Override
	public String getUsage() {
		return "-" + OPTION_NAME + ": Removes javadoc generated by JAXB from classes and methods";
	}
}